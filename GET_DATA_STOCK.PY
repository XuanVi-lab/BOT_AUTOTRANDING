import requests
import pandas as pd
import time
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def get_price_ssi(symbol, start_date, end_date):
    """
    L·∫•y d·ªØ li·ªáu gi√° c·ªï phi·∫øu t·ª´ API SSI (https://iboard-api.ssi.com.vn)
    """
    start_ts = int(pd.Timestamp(start_date).timestamp())
    end_ts = int(pd.Timestamp(end_date).timestamp())

    url = f"https://iboard-api.ssi.com.vn/statistics/charts/history?resolution=1D&symbol={symbol}&from={start_ts}&to={end_ts}"
    print(f"\nüì• ƒêang l·∫•y d·ªØ li·ªáu: {symbol}")
    
    headers = {
        "User-Agent": "Mozilla/5.0",
        "Accept": "application/json"
    }

    try:
        r = requests.get(url, headers=headers, timeout=10, verify=False)
        print(f"üì® Tr·∫°ng th√°i HTTP: {r.status_code}")

        # Parse JSON v√† l·∫•y ph·∫ßn 'data'
        json_data = r.json()
        data = json_data.get("data", {})

        if not data or 't' not in data:
            print(f"‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu h·ª£p l·ªá cho {symbol}")
            print("üì® Ph·∫£n h·ªìi ng·∫Øn:", r.text[:200])
            return None

        df = pd.DataFrame({
            'Date': pd.to_datetime(data['t'], unit='s'),
            'Open': data['o'],
            'High': data['h'],
            'Low': data['l'],
            'Close': data['c'],
            'Volume': data['v'],
        })
        df['Symbol'] = symbol
        return df

    except Exception as e:
        print(f"‚ùå L·ªói k·∫øt n·ªëi v·ªõi {symbol}: {e}")
        return None


def get_all_stocks(symbols, start_date, end_date, save_file='all_stocks_data.csv'):
    """
    L·∫•y d·ªØ li·ªáu cho danh s√°ch m√£ v√† l∆∞u file CSV
    """
    all_data = []

    for sym in symbols:
        df = get_price_ssi(sym, start_date, end_date)
        if df is not None:
            all_data.append(df)

    if all_data:
        result = pd.concat(all_data, ignore_index=True)
        result.to_csv(save_file, index=False)
        print(f"\n‚úÖ ƒê√£ l∆∞u d·ªØ li·ªáu v√†o: {save_file}")
    else:
        print("\n‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu n√†o ƒë∆∞·ª£c l∆∞u.")


# ==============================
# üëâ S·ª≠ d·ª•ng:

if __name__ == "__main__":
    stock_list = ["HPG", "HAG"]
    save_path = "E://python//BOT_AUTOTRANDING//all_stocks_data.csv"
    get_all_stocks(stock_list, start_date="2010-01-01", end_date="2024-06-30", save_file=save_path)
